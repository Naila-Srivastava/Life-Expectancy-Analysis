{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "3ae728a1-7fa1-4e01-9f2a-78ba8fd50882",
   "metadata": {},
   "outputs": [],
   "source": [
    "# app.py\n",
    "\n",
    "import streamlit as st\n",
    "import pandas as pd\n",
    "import joblib\n",
    "\n",
    "# Load model and scaler\n",
    "model = joblib.load(\"models/life_expectancy_model.keras\")\n",
    "scaler = joblib.load(\"models/scaler.pkl\")\n",
    "\n",
    "st.set_page_config(page_title=\"Life Expectancy Predictor\", layout=\"wide\")\n",
    "\n",
    "st.title(\"üåç Life Expectancy Prediction App\")\n",
    "st.markdown(\"Provide country health & economic data below to predict life expectancy.\")\n",
    "\n",
    "# Sidebar for user input\n",
    "st.sidebar.header(\"Input Features\")\n",
    "\n",
    "def user_input_features():\n",
    "    year = st.sidebar.slider(\"Year\", 2000, 2020, 2015)\n",
    "    adult_mortality = st.sidebar.slider(\"Adult Mortality\", 0, 1000, 150)\n",
    "    infant_deaths = st.sidebar.slider(\"Infant Deaths\", 0, 300, 10)\n",
    "    alcohol = st.sidebar.slider(\"Alcohol\", 0.0, 20.0, 5.0)\n",
    "    percentage_expenditure = st.sidebar.slider(\"Health Expenditure %\", 0.0, 100000.0, 5000.0)\n",
    "    hepatitis_b = st.sidebar.slider(\"Hepatitis B\", 0, 100, 80)\n",
    "    measles = st.sidebar.slider(\"Measles Cases\", 0, 10000, 50)\n",
    "    bmi = st.sidebar.slider(\"BMI\", 10.0, 50.0, 22.0)\n",
    "    under_five_deaths = st.sidebar.slider(\"Under-5 Deaths\", 0, 400, 20)\n",
    "    polio = st.sidebar.slider(\"Polio Immunization %\", 0, 100, 90)\n",
    "    total_expenditure = st.sidebar.slider(\"Total Health Expenditure\", 0.0, 20.0, 6.0)\n",
    "    diphtheria = st.sidebar.slider(\"Diphtheria %\", 0, 100, 85)\n",
    "    hiv_aids = st.sidebar.slider(\"HIV/AIDS\", 0.0, 100.0, 1.0)\n",
    "    gdp = st.sidebar.slider(\"GDP\", 0.0, 100000.0, 3000.0)\n",
    "    population = st.sidebar.slider(\"Population\", 0.0, 1500000000.0, 5000000.0)\n",
    "    thinness_1_19 = st.sidebar.slider(\"Thinness 10-19 yrs\", 0.0, 25.0, 5.0)\n",
    "    thinness_5_9 = st.sidebar.slider(\"Thinness 5-9 yrs\", 0.0, 25.0, 5.0)\n",
    "    income_comp = st.sidebar.slider(\"Income Composition of Resources\", 0.0, 1.0, 0.6)\n",
    "    schooling = st.sidebar.slider(\"Schooling Years\", 0.0, 20.0, 12.0)\n",
    "\n",
    "    data = {\n",
    "        'Year': year,\n",
    "        'Adult_Mortality': adult_mortality,\n",
    "        'infant_deaths': infant_deaths,\n",
    "        'Alcohol': alcohol,\n",
    "        'percentage_expenditure': percentage_expenditure,\n",
    "        'Hepatitis_B': hepatitis_b,\n",
    "        'Measles': measles,\n",
    "        'BMI': bmi,\n",
    "        'under-five_deaths': under_five_deaths,\n",
    "        'Polio': polio,\n",
    "        'Total_expenditure': total_expenditure,\n",
    "        'Diphtheria': diphtheria,\n",
    "        'HIV/AIDS': hiv_aids,\n",
    "        'GDP': gdp,\n",
    "        'Population': population,\n",
    "        'thinness__1-19_years': thinness_1_19,\n",
    "        'thinness_5-9_years': thinness_5_9,\n",
    "        'Income_composition_of_resources': income_comp,\n",
    "        'Schooling': schooling\n",
    "    }\n",
    "\n",
    "    return pd.DataFrame(data, index=[0])\n",
    "\n",
    "input_df = user_input_features()\n",
    "\n",
    "# Preprocess\n",
    "scaled_input = scaler.transform(input_df)\n",
    "\n",
    "# Predict\n",
    "prediction = model.predict(scaled_input)[0]\n",
    "\n",
    "st.subheader(\"üìâ Predicted Life Expectancy\")\n",
    "st.success(f\"Estimated Life Expectancy: **{prediction:.2f} years**\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "f50db14a-bae6-4433-ba92-39fe3d979623",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
